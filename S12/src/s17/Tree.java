package s17;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeCellRenderer;
import javax.swing.tree.DefaultTreeModel;

public class Tree extends javax.swing.JFrame {
    String classUrl = Tree.class.getProtectionDomain().getCodeSource().getLocation().getPath();
    String directory = "The Java Series";
    //ArrayList store parent node
    ArrayList<DefaultMutableTreeNode> nodes = new ArrayList<DefaultMutableTreeNode>();
    DefaultTreeCellRenderer renderer = new DefaultTreeCellRenderer();
//    ImageIcon icon = new ImageIcon(getClass().getResource("cloud.png"));
    /**
     * Creates new form TreeNode
     */
    public Tree() {
        initComponents();
        //Set auto break line for TextArea
        txt.setWrapStyleWord(true);
        txt.setLineWrap(true);
        //Create  node root
        nodes.add(new DefaultMutableTreeNode(new Object(directory,"")));
        createNodes(0, classUrl+directory);
    }
    
    private void createNodes(int index, String name){       
        File folder = new File(name);
        //Get all file inside directory
        File[] listOfFiles = folder.listFiles();
        Object obj;
        for (int i=0; i<listOfFiles.length; i++) {
            File file = listOfFiles[i];
            obj = new Object(file.getName(),readContent(file));
            //Create node from object
            DefaultMutableTreeNode node = new DefaultMutableTreeNode(obj);
            if (file.isDirectory()) {              
                nodes.get(index).add(node);
                nodes.add(node);
                //recursive
                createNodes(nodes.size()-1, name+"//"+file.getName());
            }
            if(file.isFile()){              
                nodes.get(index).add(node);
            }
        }       
        DefaultTreeModel treeModel=new DefaultTreeModel(nodes.get(0));      
        this.tree.setModel(treeModel); 
//        renderer.setLeafIcon(icon);
        tree.setCellRenderer(renderer);
    }
    
    //Read content in file
    private String readContent(File file){
        String content = "";
        try {
            BufferedReader in = new BufferedReader(new FileReader(file));
            String line = in.readLine();
            content += line;
            while ((line=in.readLine()) != null) {
                content += line;
            }
        } catch (FileNotFoundException ex) {
        } catch (IOException ex) {}
        return content;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tree = new javax.swing.JTree();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridLayout());

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        tree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        tree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                treeValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(tree);

        getContentPane().add(jScrollPane1);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Content"));

        txt.setColumns(20);
        txt.setRows(5);
        jScrollPane2.setViewportView(txt);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void treeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_treeValueChanged
        DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode)tree.getLastSelectedPathComponent(); 
        Object obj = (Object)selectedNode.getUserObject();
        txt.setText(obj.getContent());
    }//GEN-LAST:event_treeValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tree.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tree.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tree.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tree.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tree().setVisible(true);
            }
            
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTree tree;
    private javax.swing.JTextArea txt;
    // End of variables declaration//GEN-END:variables
}
